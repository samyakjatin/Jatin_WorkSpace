package com.Durgesh.Durgesh.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.Durgesh.Durgesh.entities.Course;
import com.Durgesh.Durgesh.services.CourseService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.parameters.RequestBody;

@CrossOrigin("*")
@RestController
public class MyController {

    @Autowired
    public CourseService courseservice;

    @Operation(summary = "Home Endpoint", description = "Returns a welcome message")
    @GetMapping("/home")
    public String home() {
        return "this is home page";
    }

    @Operation(summary = "Get All Courses", description = "Fetch all courses from the database")
    @GetMapping("/courses")
    public List<Course> getCourses() {
        return this.courseservice.getCourses();
    }

    @Operation(summary = "Get Course by ID", description = "Fetch a single course by its ID")
    @GetMapping("/courses/{courseId}")
    public Course getCourse(@PathVariable String courseId) {
        return this.courseservice.getCourse(Long.parseLong(courseId));
    }

    @Operation(summary = "Add New Course", description = "Add a new course to the database")
    @PostMapping("/courses")
    public Course addCourse(@RequestBody Course course) {
        return this.courseservice.addCourse(course);
    }

    @Operation(summary = "Update Course", description = "Update an existing course in the database")
    @PutMapping("/courses")
    public Course updateCourse(@RequestBody Course course) {
        return this.courseservice.updateCourse(course);
    }

    @Operation(summary = "Delete Course by ID", description = "Delete a course from the database by its ID")
    @DeleteMapping("/courses/{courseId}")
    public ResponseEntity<HttpStatus> deleteCourse(@PathVariable String courseId) {
        try {
            this.courseservice.deleteCourse(Long.parseLong(courseId));
            return new ResponseEntity<>(HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}
